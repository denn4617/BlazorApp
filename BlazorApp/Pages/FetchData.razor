@page "/fetchdata"

<PageTitle>Estaldo</PageTitle>

@using BlazorApp.Data
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http



<h1>Address lookup</h1>

<p>This component demonstrates fetching data from a service.</p>

<form class="addressInput" action="/action_page.php">
    <input type="text" placeholder="Search.." name="search2">
    <button type="submit"><i class="fa fa-search"></i></button>
</form>

@if (addresses == null)
{
    <p>No address is found.</p>
}
else
{
    <ul>
        @foreach (var address in addresses)
        {
            <li>@address.StreetName</li>
        }
    </ul>
}

@code {
    private Address[]? addresses;

    protected override async Task OnInitializedAsync() => 
        addresses = await Http.GetFromJsonAsync<Address[]>("https://api.dataforsyningen.dk/adresser/autocomplete");
}


@* @if (forecasts == null) *@
@* { *@
@*     <p><em>Loading...</em></p> *@
@* } *@
@* else *@
@* { *@
@*     <table class="table"> *@
@*         <thead> *@
@*             <tr> *@
@*                 <th>Date</th> *@
@*                 <th>Temp. (C)</th> *@
@*                 <th>Temp. (F)</th> *@
@*                 <th>Summary</th> *@
@*             </tr> *@
@*         </thead> *@
@*         <tbody> *@
@*             @foreach (var forecast in forecasts) *@
@*             { *@
@*                 <tr> *@
@*                     <td>@forecast.Date.ToShortDateString()</td> *@
@*                     <td>@forecast.TemperatureC</td> *@
@*                     <td>@forecast.TemperatureF</td> *@
@*                     <td>@forecast.Summary</td> *@
@*                 </tr> *@
@*             } *@
@*         </tbody> *@
@*     </table> *@
@* } *@
